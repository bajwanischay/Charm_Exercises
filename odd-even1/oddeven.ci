mainmodule oddeven{
  mainchare Main{
    entry Main(CkArgMsg* msg);
    entry [reductiontarget] void checkSorted(int result);
  };

  array [1D] Chr{
    entry Chr(CProxy_Main main, int N);
    entry void run(int N,int step){
      for(step=0;step<N;step++){
        when recvNumber[step](int istep,int inum) serial{
          if((step%2==0 && thisIndex%2==0) ||(step%2==1 && thisIndex%2==1)){
            num=inum<num?inum:num;
            if(thisIndex>0) {thisProxy[thisIndex-1].recvNumber(step+1,num);}
            else{thisProxy[thisIndex].recvNumber(step+1,num);}
          }
          else{
            num=inum>num?inum:num;
            if(thisIndex<N-1) {thisProxy[thisIndex+1].recvNumber(step+1,num);}
            else{thisProxy[thisIndex].recvNumber(step+1,num);}
          }
        }
      }
      serial{
        if(thisIndex>0)
          thisProxy[thisIndex-1].finalsend(num,1);
        if(thisIndex<N-1)
          thisProxy[thisIndex+1].finalsend(num,0);
      }
      forall[step](0:1,1){
        when finalsend (int inum, int right) serial{
          if((right && inum<num)||(!right && inum>num)){
            reduce(0);
          }
          else if(((thisIndex==N-1||thisIndex==0)&&step==0) || step==1){
            reduce(1);
          }
        }  
      }
    }
    entry void finalsend(int num,int right);
    entry void recvNumber(int step,int num);
  };
};
